name: Build and Release
run-name: Build ${{ github.run_number }} of branch ${{ github.ref_name }} by @${{ github.actor }}

on:
  workflow_dispatch:

jobs:
  # -----------------------------------------------------------------
  # PREPARE
  # -----------------------------------------------------------------
  prepare:
    name: Prepare Release
    runs-on: ubuntu-latest
    outputs:
      pkg_version: ${{ steps.semver.outputs.nextStrict }}

    steps:   
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get Next Version
      id: semver
      uses: ietf-tools/semver-action@v1
      with:
        token: ${{ github.token }}
        branch: main
        skipInvalidTags: true
        
    - name: Create Draft Release
      uses: ncipollo/release-action@v1.12.0
      with:
        prerelease: true
        draft: false
        commit: ${{ github.sha }}
        tag: ${{ steps.semver.outputs.nextStrict }}
        name: ${{ steps.semver.outputs.nextStrict }}
        body: '*pending*'
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Generate CHANGELOG
      id: changelog
      uses: Requarks/changelog-action@v1
      with:
        token: ${{ github.token }}
        fromTag: ${{ steps.semver.outputs.nextStrict }}
        toTag: ${{ steps.semver.outputs.current }}
        writeToFile: false
        
    - name: Update Release Body
      uses: ncipollo/release-action@v1.12.0
      with:
        allowUpdates: true
        commit: ${{ github.sha }}
        tag: ${{ steps.semver.outputs.nextStrict }}
        name: ${{ steps.semver.outputs.nextStrict }}
        body: ${{ steps.changelog.outputs.changes }}
        token: ${{ secrets.GITHUB_TOKEN }}

  # -----------------------------------------------------------------
  # BUILD
  # -----------------------------------------------------------------
  build:
    name: Build
    needs: [prepare]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
            ext: tar.gz
          - os: macos-latest
            platform: darwin
            arch: universal
            ext: dmg
          - os: windows-latest
            platform: win32
            arch: x64
            ext: exe
    env:
      PKG_VERSION: ${{needs.prepare.outputs.pkg_version}}
    
    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Build package
      run: |
        echo "Installing dependencies..."
        npm ci
        echo "Build package..."
        npx quasar build -m electron -T ${{ matrix.platform }} --arch ${{ matrix.arch }} -P never
        
    - name: Add Package to Release
      uses: ncipollo/release-action@v1.12.0
      with:
        allowUpdates: true
        omitBody: true
        tag: ${{ env.PKG_VERSION }}
        name: ${{ env.PKG_VERSION }}
        artifacts: "dist/electron/Packaged/*.${{ matrix.ext }}"
        token: ${{ secrets.GITHUB_TOKEN }}
        
  # -----------------------------------------------------------------
  # RELEASE
  # -----------------------------------------------------------------
  release:
    name: Publish Release
    needs: [prepare, build]
    runs-on: ubuntu-latest
    env:
      PKG_VERSION: ${{needs.prepare.outputs.pkg_version}}

    steps:        
    - name: Finalize Release
      uses: ncipollo/release-action@v1.12.0
      with:
        allowUpdates: true
        makeLatest: true
        prerelease: false
        omitBody: true
        draft: false
        tag: ${{ env.PKG_VERSION }}
        name: ${{ env.PKG_VERSION }}
        token: ${{ secrets.GITHUB_TOKEN }}
